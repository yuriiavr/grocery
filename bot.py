import os
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext

# –û—Ç—Ä–∏–º—É—î–º–æ —Ç–æ–∫–µ–Ω –∑ –æ—Ç–æ—á–µ–Ω–Ω—è
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not TOKEN:
    raise ValueError("‚ùå –ü–û–ú–ò–õ–ö–ê: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ TELEGRAM_BOT_TOKEN —É –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞!")

# –ì–ª–æ–±–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –ø–æ–∫—É–ø–æ–∫
shopping_list = []

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ –º–µ–Ω—ñ –Ω–∞–∑–≤–∏ —Ç–æ–≤–∞—Ä—ñ–≤, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∫—É–ø–∏—Ç–∏. "
        "–©–æ–± –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫, –≤–≤–µ–¥–∏ /list, –∞ —â–æ–± –æ—á–∏—Å—Ç–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ ‚Äî /clear."
    )

def add_item(update: Update, context: CallbackContext):
    global shopping_list
    item = update.message.text.strip()
    if item:  # –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –ø–æ—Ä–æ–∂–Ω—î
        shopping_list.append(item)
        update.message.reply_text(f"‚úÖ –î–æ–¥–∞–Ω–æ: {item}\nüìå –£ —Å–ø–∏—Å–∫—É: {len(shopping_list)} –ø—Ä–µ–¥–º–µ—Ç—ñ–≤.")
    else:
        update.message.reply_text("‚ö† –í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É.")

def list_items(update: Update, context: CallbackContext):
    if shopping_list:
        text = "üõí *–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:*\n" + "\n".join(f"- {item}" for item in shopping_list)
        update.message.reply_text(text, parse_mode="Markdown")
    else:
        update.message.reply_text("üì≠ –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.")

def clear_list(update: Update, context: CallbackContext):
    global shopping_list
    shopping_list = []
    update.message.reply_text("üßπ –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –æ—á–∏—â–µ–Ω–æ.")

def main():
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º —Ç–æ–∫–µ–Ω–æ–º
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("list", list_items))
    dp.add_handler(CommandHandler("clear", clear_list))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, add_item))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
